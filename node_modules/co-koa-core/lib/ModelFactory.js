"use strict";const echoHandler=require("echo-handler"),mongoose=require("mongoose"),stampit=require("stampit"),Builder=require("./Builder"),ModelFactoryHelper=require("./helpers/ModelFactoryHelper.js"),MongooseTypeNumberEnums=require("mongoose-type-number-enums"),ModelFactory=stampit({init(e){const o=Builder(e),r=echoHandler.configure({factoryOverride:`${__dirname}/i18n/${e.i18n}.depManMessages.json`,logger:e.logger}),n=ModelFactoryHelper(),s=new MongooseTypeNumberEnums(e.i18n);Object.assign(this,{build(e){s.upgradeMongoose(mongoose),o.build("models/Type",n.buildTypeCallback(r)),o.build("Model",(e=>(o,s)=>{const i=o(e);if(i.hasOwnProperty("schema")){n.injectSchemaObjectIds(i.schema);const e=new mongoose.Schema(i.schema,i.hasOwnProperty("options")?i.options:void 0);i.index&&e.index(i.index);const o=n.bindClientModelToSchema(i,e),r=mongoose.model(s,e);o.forEach(e=>{r[e]=r[e].bind(r)})}else r.throw("noSchema",s)})(e))}})}});module.exports=(e=>ModelFactory(e));